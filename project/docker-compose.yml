version: '3.5'
services:
  api1:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
    expose:
      - "5000"
    ports:
      - "5001:5000"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=mydatabase --username=user"]
      interval: 10s  
      timeout: 5s     
      retries: 3      

  api2:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
    expose:
      - "5000"
    ports:
      - "5002:5000"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=mydatabase --username=user"]
      interval: 10s  
      timeout: 5s     
      retries: 3      

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    expose:
      - "80"
    ports:
      - "9999:9999"
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=mydatabase --username=user"]
      interval: 10s  
      timeout: 5s     
      retries: 3

volumes:
  postgres_data:
